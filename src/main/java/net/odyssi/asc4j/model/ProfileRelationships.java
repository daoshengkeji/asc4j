/*
 * App Store Connect API
 * Automate the tasks you perform on the Apple Developer website and in App Store Connect.  The App Store Connect API is a REST API that enables the automation of actions you take in App Store Connect.  Calls to the API require JSON Web Tokens (JWT) for authorization; you obtain keys to create the tokens from your organizationâ€™s App Store Connect account.
 *
 * The version of the OpenAPI document: 1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.odyssi.asc4j.model;

import java.io.Serializable;
import java.util.Objects;

import javax.validation.Valid;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ProfileRelationships
 */
@JsonPropertyOrder({ ProfileRelationships.JSON_PROPERTY_BUNDLE_ID, ProfileRelationships.JSON_PROPERTY_DEVICES,
		ProfileRelationships.JSON_PROPERTY_CERTIFICATES })

public class ProfileRelationships implements Serializable {
	public static final String JSON_PROPERTY_BUNDLE_ID = "bundleId";

	public static final String JSON_PROPERTY_CERTIFICATES = "certificates";

	public static final String JSON_PROPERTY_DEVICES = "devices";
	/**
	 *
	 */
	private static final long serialVersionUID = -5840706515392088608L;

	private ProfileRelationshipsBundleId bundleId;

	private ProfileRelationshipsCertificates certificates;
	private ProfileRelationshipsDevices devices;

	public ProfileRelationships bundleId(ProfileRelationshipsBundleId bundleId) {

		this.bundleId = bundleId;
		return this;
	}

	public ProfileRelationships certificates(ProfileRelationshipsCertificates certificates) {

		this.certificates = certificates;
		return this;
	}

	public ProfileRelationships devices(ProfileRelationshipsDevices devices) {

		this.devices = devices;
		return this;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ProfileRelationships profileRelationships = (ProfileRelationships) o;
		return Objects.equals(this.bundleId, profileRelationships.bundleId)
				&& Objects.equals(this.devices, profileRelationships.devices)
				&& Objects.equals(this.certificates, profileRelationships.certificates);
	}

	/**
	 * Get bundleId
	 *
	 * @return bundleId
	 **/

	@Valid

	@JsonProperty(JSON_PROPERTY_BUNDLE_ID)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public ProfileRelationshipsBundleId getBundleId() {
		return this.bundleId;
	}

	/**
	 * Get certificates
	 *
	 * @return certificates
	 **/

	@Valid

	@JsonProperty(JSON_PROPERTY_CERTIFICATES)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public ProfileRelationshipsCertificates getCertificates() {
		return this.certificates;
	}

	/**
	 * Get devices
	 *
	 * @return devices
	 **/

	@Valid

	@JsonProperty(JSON_PROPERTY_DEVICES)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public ProfileRelationshipsDevices getDevices() {
		return this.devices;
	}

	@Override
	public int hashCode() {
		return Objects.hash(this.bundleId, this.devices, this.certificates);
	}

	public void setBundleId(ProfileRelationshipsBundleId bundleId) {
		this.bundleId = bundleId;
	}

	public void setCertificates(ProfileRelationshipsCertificates certificates) {
		this.certificates = certificates;
	}

	public void setDevices(ProfileRelationshipsDevices devices) {
		this.devices = devices;
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ProfileRelationships {\n");
		sb.append("    bundleId: ").append(toIndentedString(this.bundleId)).append("\n");
		sb.append("    devices: ").append(toIndentedString(this.devices)).append("\n");
		sb.append("    certificates: ").append(toIndentedString(this.certificates)).append("\n");
		sb.append("}");
		return sb.toString();
	}

}
