/*
 * App Store Connect API
 * Automate the tasks you perform on the Apple Developer website and in App Store Connect.  The App Store Connect API is a REST API that enables the automation of actions you take in App Store Connect.  Calls to the API require JSON Web Tokens (JWT) for authorization; you obtain keys to create the tokens from your organizationâ€™s App Store Connect account.
 *
 * The version of the OpenAPI document: 1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.odyssi.asc4j.model;

import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.Objects;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * AppStoreVersionCreateRequestDataAttributes
 */
@JsonPropertyOrder({ AppStoreVersionCreateRequestDataAttributes.JSON_PROPERTY_PLATFORM,
		AppStoreVersionCreateRequestDataAttributes.JSON_PROPERTY_VERSION_STRING,
		AppStoreVersionCreateRequestDataAttributes.JSON_PROPERTY_COPYRIGHT,
		AppStoreVersionCreateRequestDataAttributes.JSON_PROPERTY_RELEASE_TYPE,
		AppStoreVersionCreateRequestDataAttributes.JSON_PROPERTY_EARLIEST_RELEASE_DATE,
		AppStoreVersionCreateRequestDataAttributes.JSON_PROPERTY_USES_IDFA })

public class AppStoreVersionCreateRequestDataAttributes implements Serializable {
	/**
	 *
	 */
	private static final long serialVersionUID = 5358533088604558800L;

	/**
	 * Gets or Sets releaseType
	 */
	public enum ReleaseTypeEnum {
		AFTER_APPROVAL("AFTER_APPROVAL"),

		MANUAL("MANUAL"),

		SCHEDULED("SCHEDULED");

		@JsonCreator
		public static ReleaseTypeEnum fromValue(String value) {
			for (ReleaseTypeEnum b : ReleaseTypeEnum.values()) {
				if (b.value.equals(value)) {
					return b;
				}
			}
			throw new IllegalArgumentException("Unexpected value '" + value + "'");
		}

		private String value;

		ReleaseTypeEnum(String value) {
			this.value = value;
		}

		@JsonValue
		public String getValue() {
			return this.value;
		}

		@Override
		public String toString() {
			return String.valueOf(this.value);
		}
	}

	public static final String JSON_PROPERTY_COPYRIGHT = "copyright";
	public static final String JSON_PROPERTY_EARLIEST_RELEASE_DATE = "earliestReleaseDate";

	public static final String JSON_PROPERTY_PLATFORM = "platform";
	public static final String JSON_PROPERTY_RELEASE_TYPE = "releaseType";

	public static final String JSON_PROPERTY_USES_IDFA = "usesIdfa";
	public static final String JSON_PROPERTY_VERSION_STRING = "versionString";

	private String copyright;
	private OffsetDateTime earliestReleaseDate;

	private Platform platform;
	private ReleaseTypeEnum releaseType;

	private Boolean usesIdfa;
	private String versionString;

	public AppStoreVersionCreateRequestDataAttributes copyright(String copyright) {

		this.copyright = copyright;
		return this;
	}

	public AppStoreVersionCreateRequestDataAttributes earliestReleaseDate(OffsetDateTime earliestReleaseDate) {

		this.earliestReleaseDate = earliestReleaseDate;
		return this;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		AppStoreVersionCreateRequestDataAttributes appStoreVersionCreateRequestDataAttributes = (AppStoreVersionCreateRequestDataAttributes) o;
		return Objects.equals(this.platform, appStoreVersionCreateRequestDataAttributes.platform)
				&& Objects.equals(this.versionString, appStoreVersionCreateRequestDataAttributes.versionString)
				&& Objects.equals(this.copyright, appStoreVersionCreateRequestDataAttributes.copyright)
				&& Objects.equals(this.releaseType, appStoreVersionCreateRequestDataAttributes.releaseType)
				&& Objects.equals(this.earliestReleaseDate,
						appStoreVersionCreateRequestDataAttributes.earliestReleaseDate)
				&& Objects.equals(this.usesIdfa, appStoreVersionCreateRequestDataAttributes.usesIdfa);
	}

	/**
	 * Get copyright
	 *
	 * @return copyright
	 **/

	@JsonProperty(JSON_PROPERTY_COPYRIGHT)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public String getCopyright() {
		return this.copyright;
	}

	/**
	 * Get earliestReleaseDate
	 *
	 * @return earliestReleaseDate
	 **/

	@Valid

	@JsonProperty(JSON_PROPERTY_EARLIEST_RELEASE_DATE)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public OffsetDateTime getEarliestReleaseDate() {
		return this.earliestReleaseDate;
	}

	/**
	 * Get platform
	 *
	 * @return platform
	 **/
	@NotNull
	@Valid

	@JsonProperty(JSON_PROPERTY_PLATFORM)
	@JsonInclude(value = JsonInclude.Include.ALWAYS)

	public Platform getPlatform() {
		return this.platform;
	}

	/**
	 * Get releaseType
	 *
	 * @return releaseType
	 **/

	@JsonProperty(JSON_PROPERTY_RELEASE_TYPE)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public ReleaseTypeEnum getReleaseType() {
		return this.releaseType;
	}

	/**
	 * Get usesIdfa
	 *
	 * @return usesIdfa
	 **/

	@JsonProperty(JSON_PROPERTY_USES_IDFA)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public Boolean getUsesIdfa() {
		return this.usesIdfa;
	}

	/**
	 * Get versionString
	 *
	 * @return versionString
	 **/
	@NotNull

	@JsonProperty(JSON_PROPERTY_VERSION_STRING)
	@JsonInclude(value = JsonInclude.Include.ALWAYS)

	public String getVersionString() {
		return this.versionString;
	}

	@Override
	public int hashCode() {
		return Objects.hash(this.platform, this.versionString, this.copyright, this.releaseType,
				this.earliestReleaseDate, this.usesIdfa);
	}

	public AppStoreVersionCreateRequestDataAttributes platform(Platform platform) {

		this.platform = platform;
		return this;
	}

	public AppStoreVersionCreateRequestDataAttributes releaseType(ReleaseTypeEnum releaseType) {

		this.releaseType = releaseType;
		return this;
	}

	public void setCopyright(String copyright) {
		this.copyright = copyright;
	}

	public void setEarliestReleaseDate(OffsetDateTime earliestReleaseDate) {
		this.earliestReleaseDate = earliestReleaseDate;
	}

	public void setPlatform(Platform platform) {
		this.platform = platform;
	}

	public void setReleaseType(ReleaseTypeEnum releaseType) {
		this.releaseType = releaseType;
	}

	public void setUsesIdfa(Boolean usesIdfa) {
		this.usesIdfa = usesIdfa;
	}

	public void setVersionString(String versionString) {
		this.versionString = versionString;
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class AppStoreVersionCreateRequestDataAttributes {\n");
		sb.append("    platform: ").append(toIndentedString(this.platform)).append("\n");
		sb.append("    versionString: ").append(toIndentedString(this.versionString)).append("\n");
		sb.append("    copyright: ").append(toIndentedString(this.copyright)).append("\n");
		sb.append("    releaseType: ").append(toIndentedString(this.releaseType)).append("\n");
		sb.append("    earliestReleaseDate: ").append(toIndentedString(this.earliestReleaseDate)).append("\n");
		sb.append("    usesIdfa: ").append(toIndentedString(this.usesIdfa)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	public AppStoreVersionCreateRequestDataAttributes usesIdfa(Boolean usesIdfa) {

		this.usesIdfa = usesIdfa;
		return this;
	}

	public AppStoreVersionCreateRequestDataAttributes versionString(String versionString) {

		this.versionString = versionString;
		return this;
	}

}
