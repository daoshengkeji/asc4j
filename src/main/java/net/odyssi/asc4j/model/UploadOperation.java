/*
 * App Store Connect API
 * Automate the tasks you perform on the Apple Developer website and in App Store Connect.  The App Store Connect API is a REST API that enables the automation of actions you take in App Store Connect.  Calls to the API require JSON Web Tokens (JWT) for authorization; you obtain keys to create the tokens from your organizationâ€™s App Store Connect account.
 *
 * The version of the OpenAPI document: 1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.odyssi.asc4j.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.validation.Valid;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * UploadOperation
 */
@JsonPropertyOrder({ UploadOperation.JSON_PROPERTY_METHOD, UploadOperation.JSON_PROPERTY_URL,
		UploadOperation.JSON_PROPERTY_LENGTH, UploadOperation.JSON_PROPERTY_OFFSET,
		UploadOperation.JSON_PROPERTY_REQUEST_HEADERS })

public class UploadOperation implements Serializable {
	public static final String JSON_PROPERTY_LENGTH = "length";

	public static final String JSON_PROPERTY_METHOD = "method";

	public static final String JSON_PROPERTY_OFFSET = "offset";
	public static final String JSON_PROPERTY_REQUEST_HEADERS = "requestHeaders";

	public static final String JSON_PROPERTY_URL = "url";
	/**
	 *
	 */
	private static final long serialVersionUID = -6074884943928400641L;

	private Integer length;

	private String method;
	private Integer offset;

	private List<UploadOperationHeader> requestHeaders = null;
	private String url;

	public UploadOperation addRequestHeadersItem(UploadOperationHeader requestHeadersItem) {
		if (this.requestHeaders == null) {
			this.requestHeaders = new ArrayList<>();
		}
		this.requestHeaders.add(requestHeadersItem);
		return this;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		UploadOperation uploadOperation = (UploadOperation) o;
		return Objects.equals(this.method, uploadOperation.method) && Objects.equals(this.url, uploadOperation.url)
				&& Objects.equals(this.length, uploadOperation.length)
				&& Objects.equals(this.offset, uploadOperation.offset)
				&& Objects.equals(this.requestHeaders, uploadOperation.requestHeaders);
	}

	/**
	 * Get length
	 *
	 * @return length
	 **/

	@JsonProperty(JSON_PROPERTY_LENGTH)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public Integer getLength() {
		return this.length;
	}

	/**
	 * Get method
	 *
	 * @return method
	 **/

	@JsonProperty(JSON_PROPERTY_METHOD)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public String getMethod() {
		return this.method;
	}

	/**
	 * Get offset
	 *
	 * @return offset
	 **/

	@JsonProperty(JSON_PROPERTY_OFFSET)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public Integer getOffset() {
		return this.offset;
	}

	/**
	 * Get requestHeaders
	 *
	 * @return requestHeaders
	 **/

	@Valid

	@JsonProperty(JSON_PROPERTY_REQUEST_HEADERS)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public List<UploadOperationHeader> getRequestHeaders() {
		return this.requestHeaders;
	}

	/**
	 * Get url
	 *
	 * @return url
	 **/

	@JsonProperty(JSON_PROPERTY_URL)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public String getUrl() {
		return this.url;
	}

	@Override
	public int hashCode() {
		return Objects.hash(this.method, this.url, this.length, this.offset, this.requestHeaders);
	}

	public UploadOperation length(Integer length) {

		this.length = length;
		return this;
	}

	public UploadOperation method(String method) {

		this.method = method;
		return this;
	}

	public UploadOperation offset(Integer offset) {

		this.offset = offset;
		return this;
	}

	public UploadOperation requestHeaders(List<UploadOperationHeader> requestHeaders) {

		this.requestHeaders = requestHeaders;
		return this;
	}

	public void setLength(Integer length) {
		this.length = length;
	}

	public void setMethod(String method) {
		this.method = method;
	}

	public void setOffset(Integer offset) {
		this.offset = offset;
	}

	public void setRequestHeaders(List<UploadOperationHeader> requestHeaders) {
		this.requestHeaders = requestHeaders;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class UploadOperation {\n");
		sb.append("    method: ").append(toIndentedString(this.method)).append("\n");
		sb.append("    url: ").append(toIndentedString(this.url)).append("\n");
		sb.append("    length: ").append(toIndentedString(this.length)).append("\n");
		sb.append("    offset: ").append(toIndentedString(this.offset)).append("\n");
		sb.append("    requestHeaders: ").append(toIndentedString(this.requestHeaders)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	public UploadOperation url(String url) {

		this.url = url;
		return this;
	}

}
