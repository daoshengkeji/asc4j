/*
 * App Store Connect API
 * Automate the tasks you perform on the Apple Developer website and in App Store Connect.  The App Store Connect API is a REST API that enables the automation of actions you take in App Store Connect.  Calls to the API require JSON Web Tokens (JWT) for authorization; you obtain keys to create the tokens from your organizationâ€™s App Store Connect account.
 *
 * The version of the OpenAPI document: 1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.odyssi.asc4j.model;

import java.io.Serializable;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * PerfPowerMetricAttributes
 */
@JsonPropertyOrder({ PerfPowerMetricAttributes.JSON_PROPERTY_PLATFORM,
		PerfPowerMetricAttributes.JSON_PROPERTY_METRIC_TYPE, PerfPowerMetricAttributes.JSON_PROPERTY_DEVICE_TYPE })

public class PerfPowerMetricAttributes implements Serializable {
	/**
	 * Gets or Sets metricType
	 */
	public enum MetricTypeEnum {
		ANIMATION("ANIMATION"),

		BATTERY("BATTERY"),

		DISK("DISK"),

		HANG("HANG"),

		LAUNCH("LAUNCH"),

		MEMORY("MEMORY");

		@JsonCreator
		public static MetricTypeEnum fromValue(String value) {
			for (MetricTypeEnum b : MetricTypeEnum.values()) {
				if (b.value.equals(value)) {
					return b;
				}
			}
			throw new IllegalArgumentException("Unexpected value '" + value + "'");
		}

		private String value;

		MetricTypeEnum(String value) {
			this.value = value;
		}

		@JsonValue
		public String getValue() {
			return this.value;
		}

		@Override
		public String toString() {
			return String.valueOf(this.value);
		}
	}

	/**
	 * Gets or Sets platform
	 */
	public enum PlatformEnum {
		IOS("IOS");

		@JsonCreator
		public static PlatformEnum fromValue(String value) {
			for (PlatformEnum b : PlatformEnum.values()) {
				if (b.value.equals(value)) {
					return b;
				}
			}
			throw new IllegalArgumentException("Unexpected value '" + value + "'");
		}

		private String value;

		PlatformEnum(String value) {
			this.value = value;
		}

		@JsonValue
		public String getValue() {
			return this.value;
		}

		@Override
		public String toString() {
			return String.valueOf(this.value);
		}
	}

	public static final String JSON_PROPERTY_DEVICE_TYPE = "deviceType";

	public static final String JSON_PROPERTY_METRIC_TYPE = "metricType";
	public static final String JSON_PROPERTY_PLATFORM = "platform";

	/**
	 *
	 */
	private static final long serialVersionUID = -393602641556785387L;

	private String deviceType;

	private MetricTypeEnum metricType;
	private PlatformEnum platform;

	public PerfPowerMetricAttributes deviceType(String deviceType) {

		this.deviceType = deviceType;
		return this;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		PerfPowerMetricAttributes perfPowerMetricAttributes = (PerfPowerMetricAttributes) o;
		return Objects.equals(this.platform, perfPowerMetricAttributes.platform)
				&& Objects.equals(this.metricType, perfPowerMetricAttributes.metricType)
				&& Objects.equals(this.deviceType, perfPowerMetricAttributes.deviceType);
	}

	/**
	 * Get deviceType
	 *
	 * @return deviceType
	 **/

	@JsonProperty(JSON_PROPERTY_DEVICE_TYPE)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public String getDeviceType() {
		return this.deviceType;
	}

	/**
	 * Get metricType
	 *
	 * @return metricType
	 **/

	@JsonProperty(JSON_PROPERTY_METRIC_TYPE)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public MetricTypeEnum getMetricType() {
		return this.metricType;
	}

	/**
	 * Get platform
	 *
	 * @return platform
	 **/

	@JsonProperty(JSON_PROPERTY_PLATFORM)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public PlatformEnum getPlatform() {
		return this.platform;
	}

	@Override
	public int hashCode() {
		return Objects.hash(this.platform, this.metricType, this.deviceType);
	}

	public PerfPowerMetricAttributes metricType(MetricTypeEnum metricType) {

		this.metricType = metricType;
		return this;
	}

	public PerfPowerMetricAttributes platform(PlatformEnum platform) {

		this.platform = platform;
		return this;
	}

	public void setDeviceType(String deviceType) {
		this.deviceType = deviceType;
	}

	public void setMetricType(MetricTypeEnum metricType) {
		this.metricType = metricType;
	}

	public void setPlatform(PlatformEnum platform) {
		this.platform = platform;
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class PerfPowerMetricAttributes {\n");
		sb.append("    platform: ").append(toIndentedString(this.platform)).append("\n");
		sb.append("    metricType: ").append(toIndentedString(this.metricType)).append("\n");
		sb.append("    deviceType: ").append(toIndentedString(this.deviceType)).append("\n");
		sb.append("}");
		return sb.toString();
	}

}
