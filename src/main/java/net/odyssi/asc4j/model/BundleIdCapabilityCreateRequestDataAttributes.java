/*
 * App Store Connect API
 * Automate the tasks you perform on the Apple Developer website and in App Store Connect.  The App Store Connect API is a REST API that enables the automation of actions you take in App Store Connect.  Calls to the API require JSON Web Tokens (JWT) for authorization; you obtain keys to create the tokens from your organizationâ€™s App Store Connect account.
 *
 * The version of the OpenAPI document: 1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.odyssi.asc4j.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * BundleIdCapabilityCreateRequestDataAttributes
 */
@JsonPropertyOrder({ BundleIdCapabilityCreateRequestDataAttributes.JSON_PROPERTY_CAPABILITY_TYPE,
		BundleIdCapabilityCreateRequestDataAttributes.JSON_PROPERTY_SETTINGS })

public class BundleIdCapabilityCreateRequestDataAttributes implements Serializable {
	public static final String JSON_PROPERTY_CAPABILITY_TYPE = "capabilityType";

	public static final String JSON_PROPERTY_SETTINGS = "settings";

	/**
	 *
	 */
	private static final long serialVersionUID = -3127285216730970746L;

	private CapabilityType capabilityType;
	private List<CapabilitySetting> settings = null;

	public BundleIdCapabilityCreateRequestDataAttributes addSettingsItem(CapabilitySetting settingsItem) {
		if (this.settings == null) {
			this.settings = new ArrayList<>();
		}
		this.settings.add(settingsItem);
		return this;
	}

	public BundleIdCapabilityCreateRequestDataAttributes capabilityType(CapabilityType capabilityType) {

		this.capabilityType = capabilityType;
		return this;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		BundleIdCapabilityCreateRequestDataAttributes bundleIdCapabilityCreateRequestDataAttributes = (BundleIdCapabilityCreateRequestDataAttributes) o;
		return Objects.equals(this.capabilityType, bundleIdCapabilityCreateRequestDataAttributes.capabilityType)
				&& Objects.equals(this.settings, bundleIdCapabilityCreateRequestDataAttributes.settings);
	}

	/**
	 * Get capabilityType
	 *
	 * @return capabilityType
	 **/
	@NotNull
	@Valid

	@JsonProperty(JSON_PROPERTY_CAPABILITY_TYPE)
	@JsonInclude(value = JsonInclude.Include.ALWAYS)

	public CapabilityType getCapabilityType() {
		return this.capabilityType;
	}

	/**
	 * Get settings
	 *
	 * @return settings
	 **/

	@Valid

	@JsonProperty(JSON_PROPERTY_SETTINGS)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public List<CapabilitySetting> getSettings() {
		return this.settings;
	}

	@Override
	public int hashCode() {
		return Objects.hash(this.capabilityType, this.settings);
	}

	public void setCapabilityType(CapabilityType capabilityType) {
		this.capabilityType = capabilityType;
	}

	public void setSettings(List<CapabilitySetting> settings) {
		this.settings = settings;
	}

	public BundleIdCapabilityCreateRequestDataAttributes settings(List<CapabilitySetting> settings) {

		this.settings = settings;
		return this;
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class BundleIdCapabilityCreateRequestDataAttributes {\n");
		sb.append("    capabilityType: ").append(toIndentedString(this.capabilityType)).append("\n");
		sb.append("    settings: ").append(toIndentedString(this.settings)).append("\n");
		sb.append("}");
		return sb.toString();
	}

}
