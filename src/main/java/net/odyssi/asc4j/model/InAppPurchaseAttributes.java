/*
 * App Store Connect API
 * Automate the tasks you perform on the Apple Developer website and in App Store Connect.  The App Store Connect API is a REST API that enables the automation of actions you take in App Store Connect.  Calls to the API require JSON Web Tokens (JWT) for authorization; you obtain keys to create the tokens from your organizationâ€™s App Store Connect account.
 *
 * The version of the OpenAPI document: 1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.odyssi.asc4j.model;

import java.io.Serializable;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * InAppPurchaseAttributes
 */
@JsonPropertyOrder({ InAppPurchaseAttributes.JSON_PROPERTY_REFERENCE_NAME,
		InAppPurchaseAttributes.JSON_PROPERTY_PRODUCT_ID, InAppPurchaseAttributes.JSON_PROPERTY_IN_APP_PURCHASE_TYPE,
		InAppPurchaseAttributes.JSON_PROPERTY_STATE })

public class InAppPurchaseAttributes implements Serializable {
	/**
	 *
	 */
	private static final long serialVersionUID = 6009263812997153033L;

	/**
	 * Gets or Sets inAppPurchaseType
	 */
	public enum InAppPurchaseTypeEnum {
		AUTOMATICALLY_RENEWABLE_SUBSCRIPTION("AUTOMATICALLY_RENEWABLE_SUBSCRIPTION"),

		CONSUMABLE("CONSUMABLE"),

		FREE_SUBSCRIPTION("FREE_SUBSCRIPTION"),

		NON_CONSUMABLE("NON_CONSUMABLE"),

		NON_RENEWING_SUBSCRIPTION("NON_RENEWING_SUBSCRIPTION");

		@JsonCreator
		public static InAppPurchaseTypeEnum fromValue(String value) {
			for (InAppPurchaseTypeEnum b : InAppPurchaseTypeEnum.values()) {
				if (b.value.equals(value)) {
					return b;
				}
			}
			throw new IllegalArgumentException("Unexpected value '" + value + "'");
		}

		private String value;

		InAppPurchaseTypeEnum(String value) {
			this.value = value;
		}

		@JsonValue
		public String getValue() {
			return this.value;
		}

		@Override
		public String toString() {
			return String.valueOf(this.value);
		}
	}

	/**
	 * Gets or Sets state
	 */
	public enum StateEnum {
		APPROVED("APPROVED"),

		CREATED("CREATED"),

		DELETED("DELETED"),

		DELETION_IN_PROGRESS("DELETION_IN_PROGRESS"),

		DEVELOPER_ACTION_NEEDED("DEVELOPER_ACTION_NEEDED"),

		DEVELOPER_REMOVED_FROM_SALE("DEVELOPER_REMOVED_FROM_SALE"),

		DEVELOPER_SIGNED_OFF("DEVELOPER_SIGNED_OFF"),

		IN_REVIEW("IN_REVIEW"),

		MISSING_METADATA("MISSING_METADATA"),

		PENDING_DEVELOPER_RELEASE("PENDING_DEVELOPER_RELEASE"),

		PREPARE_FOR_SUBMISSION("PREPARE_FOR_SUBMISSION"),

		PROCESSING_CONTENT("PROCESSING_CONTENT"),

		READY_TO_SUBMIT("READY_TO_SUBMIT"),

		REJECTED("REJECTED"),

		REMOVED_FROM_SALE("REMOVED_FROM_SALE"),

		REPLACED("REPLACED"),

		WAITING_FOR_REVIEW("WAITING_FOR_REVIEW"),

		WAITING_FOR_SCREENSHOT("WAITING_FOR_SCREENSHOT"),

		WAITING_FOR_UPLOAD("WAITING_FOR_UPLOAD");

		@JsonCreator
		public static StateEnum fromValue(String value) {
			for (StateEnum b : StateEnum.values()) {
				if (b.value.equals(value)) {
					return b;
				}
			}
			throw new IllegalArgumentException("Unexpected value '" + value + "'");
		}

		private String value;

		StateEnum(String value) {
			this.value = value;
		}

		@JsonValue
		public String getValue() {
			return this.value;
		}

		@Override
		public String toString() {
			return String.valueOf(this.value);
		}
	}

	public static final String JSON_PROPERTY_IN_APP_PURCHASE_TYPE = "inAppPurchaseType";

	public static final String JSON_PROPERTY_PRODUCT_ID = "productId";
	public static final String JSON_PROPERTY_REFERENCE_NAME = "referenceName";

	public static final String JSON_PROPERTY_STATE = "state";

	private InAppPurchaseTypeEnum inAppPurchaseType;

	private String productId;

	private String referenceName;
	private StateEnum state;

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		InAppPurchaseAttributes inAppPurchaseAttributes = (InAppPurchaseAttributes) o;
		return Objects.equals(this.referenceName, inAppPurchaseAttributes.referenceName)
				&& Objects.equals(this.productId, inAppPurchaseAttributes.productId)
				&& Objects.equals(this.inAppPurchaseType, inAppPurchaseAttributes.inAppPurchaseType)
				&& Objects.equals(this.state, inAppPurchaseAttributes.state);
	}

	/**
	 * Get inAppPurchaseType
	 *
	 * @return inAppPurchaseType
	 **/

	@JsonProperty(JSON_PROPERTY_IN_APP_PURCHASE_TYPE)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public InAppPurchaseTypeEnum getInAppPurchaseType() {
		return this.inAppPurchaseType;
	}

	/**
	 * Get productId
	 *
	 * @return productId
	 **/

	@JsonProperty(JSON_PROPERTY_PRODUCT_ID)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public String getProductId() {
		return this.productId;
	}

	/**
	 * Get referenceName
	 *
	 * @return referenceName
	 **/

	@JsonProperty(JSON_PROPERTY_REFERENCE_NAME)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public String getReferenceName() {
		return this.referenceName;
	}

	/**
	 * Get state
	 *
	 * @return state
	 **/

	@JsonProperty(JSON_PROPERTY_STATE)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public StateEnum getState() {
		return this.state;
	}

	@Override
	public int hashCode() {
		return Objects.hash(this.referenceName, this.productId, this.inAppPurchaseType, this.state);
	}

	public InAppPurchaseAttributes inAppPurchaseType(InAppPurchaseTypeEnum inAppPurchaseType) {

		this.inAppPurchaseType = inAppPurchaseType;
		return this;
	}

	public InAppPurchaseAttributes productId(String productId) {

		this.productId = productId;
		return this;
	}

	public InAppPurchaseAttributes referenceName(String referenceName) {

		this.referenceName = referenceName;
		return this;
	}

	public void setInAppPurchaseType(InAppPurchaseTypeEnum inAppPurchaseType) {
		this.inAppPurchaseType = inAppPurchaseType;
	}

	public void setProductId(String productId) {
		this.productId = productId;
	}

	public void setReferenceName(String referenceName) {
		this.referenceName = referenceName;
	}

	public void setState(StateEnum state) {
		this.state = state;
	}

	public InAppPurchaseAttributes state(StateEnum state) {

		this.state = state;
		return this;
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class InAppPurchaseAttributes {\n");
		sb.append("    referenceName: ").append(toIndentedString(this.referenceName)).append("\n");
		sb.append("    productId: ").append(toIndentedString(this.productId)).append("\n");
		sb.append("    inAppPurchaseType: ").append(toIndentedString(this.inAppPurchaseType)).append("\n");
		sb.append("    state: ").append(toIndentedString(this.state)).append("\n");
		sb.append("}");
		return sb.toString();
	}

}
