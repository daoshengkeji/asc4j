/*
 * App Store Connect API
 * Automate the tasks you perform on the Apple Developer website and in App Store Connect.  The App Store Connect API is a REST API that enables the automation of actions you take in App Store Connect.  Calls to the API require JSON Web Tokens (JWT) for authorization; you obtain keys to create the tokens from your organizationâ€™s App Store Connect account.
 *
 * The version of the OpenAPI document: 1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.odyssi.asc4j.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

import javax.validation.Valid;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * DiagnosticSignatureAttributes
 */
@JsonPropertyOrder({ DiagnosticSignatureAttributes.JSON_PROPERTY_DIAGNOSTIC_TYPE,
		DiagnosticSignatureAttributes.JSON_PROPERTY_SIGNATURE, DiagnosticSignatureAttributes.JSON_PROPERTY_WEIGHT })

public class DiagnosticSignatureAttributes implements Serializable {
	/**
	 *
	 */
	private static final long serialVersionUID = -7309345026103160584L;

	/**
	 * Gets or Sets diagnosticType
	 */
	public enum DiagnosticTypeEnum {
		DISK_WRITES("DISK_WRITES");

		@JsonCreator
		public static DiagnosticTypeEnum fromValue(String value) {
			for (DiagnosticTypeEnum b : DiagnosticTypeEnum.values()) {
				if (b.value.equals(value)) {
					return b;
				}
			}
			throw new IllegalArgumentException("Unexpected value '" + value + "'");
		}

		private String value;

		DiagnosticTypeEnum(String value) {
			this.value = value;
		}

		@JsonValue
		public String getValue() {
			return this.value;
		}

		@Override
		public String toString() {
			return String.valueOf(this.value);
		}
	}

	public static final String JSON_PROPERTY_DIAGNOSTIC_TYPE = "diagnosticType";

	public static final String JSON_PROPERTY_SIGNATURE = "signature";
	public static final String JSON_PROPERTY_WEIGHT = "weight";

	private DiagnosticTypeEnum diagnosticType;

	private String signature;
	private BigDecimal weight;

	public DiagnosticSignatureAttributes diagnosticType(DiagnosticTypeEnum diagnosticType) {

		this.diagnosticType = diagnosticType;
		return this;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		DiagnosticSignatureAttributes diagnosticSignatureAttributes = (DiagnosticSignatureAttributes) o;
		return Objects.equals(this.diagnosticType, diagnosticSignatureAttributes.diagnosticType)
				&& Objects.equals(this.signature, diagnosticSignatureAttributes.signature)
				&& Objects.equals(this.weight, diagnosticSignatureAttributes.weight);
	}

	/**
	 * Get diagnosticType
	 *
	 * @return diagnosticType
	 **/

	@JsonProperty(JSON_PROPERTY_DIAGNOSTIC_TYPE)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public DiagnosticTypeEnum getDiagnosticType() {
		return this.diagnosticType;
	}

	/**
	 * Get signature
	 *
	 * @return signature
	 **/

	@JsonProperty(JSON_PROPERTY_SIGNATURE)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public String getSignature() {
		return this.signature;
	}

	/**
	 * Get weight
	 *
	 * @return weight
	 **/

	@Valid

	@JsonProperty(JSON_PROPERTY_WEIGHT)
	@JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

	public BigDecimal getWeight() {
		return this.weight;
	}

	@Override
	public int hashCode() {
		return Objects.hash(this.diagnosticType, this.signature, this.weight);
	}

	public void setDiagnosticType(DiagnosticTypeEnum diagnosticType) {
		this.diagnosticType = diagnosticType;
	}

	public void setSignature(String signature) {
		this.signature = signature;
	}

	public void setWeight(BigDecimal weight) {
		this.weight = weight;
	}

	public DiagnosticSignatureAttributes signature(String signature) {

		this.signature = signature;
		return this;
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class DiagnosticSignatureAttributes {\n");
		sb.append("    diagnosticType: ").append(toIndentedString(this.diagnosticType)).append("\n");
		sb.append("    signature: ").append(toIndentedString(this.signature)).append("\n");
		sb.append("    weight: ").append(toIndentedString(this.weight)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	public DiagnosticSignatureAttributes weight(BigDecimal weight) {

		this.weight = weight;
		return this;
	}

}
